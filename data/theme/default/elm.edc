///////////////////////////////////////////////////////////////////////////////
group { name: "elm/scroller/base/enna";
      alias: "elm/list/base/enna";
      alias: "elm/genlist/base/enna";
   script {
      public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
      public timer0(val) {
         new v;
         v = get_int(sbvis_v);
         if (v) {
            v = get_int(sbalways_v);
            if (!v) {
               emit("do-hide-vbar", "");
               set_int(sbvis_v, 0);
            }
         }
         v = get_int(sbvis_h);
         if (v) {
            v = get_int(sbalways_h);
            if (!v) {
               emit("do-hide-hbar", "");
               set_int(sbvis_h, 0);
            }
         }
         set_int(sbvis_timer, 0);
         return 0;
      }
   }
   images {
      image: "bt_sm_base2.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "sb_runnerh.png" COMP;
      image: "sb_runnerv.png" COMP;
   }
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: 4 4;
            rel2.offset: -5 -5;
            color: 255 255 255 0;
         }
      }
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 4 4;

            rel2.offset: -5 -5;
            rel2.to_x: "sb_vbar";
            rel2.to_y: "sb_hbar";
            rel2.relative: 0 0;

         }
      }
      part { name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar_clip";
         clip_to: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 17;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset:   -2 0;
            }
            rel2 {
               relative: 1.0 0.0;
               offset:   -2 -1;
               to_y:     "sb_hbar";
            }
         }
      }
      part { name: "sb_vbar_runner";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 3 3;
            max: 3 99999;
            rel1.to:       "sb_vbar";
            rel2.to:       "sb_vbar";
            image {
               normal: "sb_runnerv.png";
               border: 0 0 4 4;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.vbar";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 17;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
      }
      part { name: "sb_vbar_over1";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_vbar_over2";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }

      part { name: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar_clip";
         clip_to: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 17;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset:   0 -2;
            }
            rel2 {
               relative: 0.0 1.0;
               offset:   -1 -2;
               to_x:     "sb_vbar";
            }
         }
      }
      part { name: "sb_hbar_runner";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 3 3;
            max: 99999 3;
            rel1.to:       "sb_hbar";
            rel2.to:       "sb_hbar";
            image {
               normal: "sb_runnerh.png";
               border: 4 4 0 0;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.hbar";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 17;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
      }
      part { name: "sb_hbar_over1";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_hbar_over2";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         script {
            set_state(PART:"sb_hbar_clip", "hidden", 0.0);
            set_state(PART:"sb_vbar_clip", "hidden", 0.0);
            set_int(sbvis_h, 0);
            set_int(sbvis_v, 0);
            set_int(sbalways_v, 0);
            set_int(sbalways_h, 0);
            set_int(sbvis_timer, 0);
         }
      }

      program { name: "vbar_show";
         signal: "elm,action,show,vbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_hide";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_show_always";
         signal: "elm,action,show_always,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               set_int(sbalways_v, 1);
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
         }
      }
      program { name: "vbar_show_notalways";
         signal: "elm,action,show_notalways,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_v);
            if (v) {
               set_int(sbalways_v, 0);
               v = get_int(sbvis_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
         }
      }
      program { name: "sb_vbar_show";
         signal: "do-show-vbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 1.0;
         target: "sb_vbar_clip";
      }
      program { name: "sb_vbar_hide";
         signal: "do-hide-vbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 1.0;
         target: "sb_vbar_clip";
      }

      program { name: "hbar_show";
         signal: "elm,action,show,hbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_hide";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_show_always";
         signal: "elm,action,show_always,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               set_int(sbalways_h, 1);
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
         }
      }
      program { name: "hbar_show_notalways";
         signal: "elm,action,show_notalways,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_h);
            if (v) {
               set_int(sbalways_h, 0);
               v = get_int(sbvis_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
         }
      }
      program { name: "sb_hbar_show";
         signal: "do-show-hbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 1.0;
         target: "sb_hbar_clip";
      }
      program { name: "sb_hbar_hide";
         signal: "do-hide-hbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 1.0;
         target: "sb_hbar_clip";
      }

      program { name: "scroll";
         signal: "elm,action,scroll";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
            v = get_int(sbvis_timer);
            if (v > 0) cancel_timer(v);
            v = timer(2.0, "timer0", 0);
            set_int(sbvis_timer, v);
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group { name: "elm/button/base/simple";
   images {
      image: "bt_base1.png" COMP;
      image: "bt_base2.png" COMP;
      image: "bt_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "bt_glow.png" COMP;
   }
   parts {
      part { name: "button_image";
         type: RECT;
         mouse_events: 1;
         description {
            color: 255 255 255 0;
            state: "default" 0.0;
            visible: 1;
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
         }
      }

      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.offset: 4 4;
            rel2.offset: 3 -5;
            rel2.relative: 0.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            align: 0 0.5;
            aspect: 1.0 1.0;
            rel2.offset: -5 -5;
            rel2.relative: 1.0 1.0;
            aspect_preference: BOTH;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            rel2.offset: -5 -5;
            rel2.relative: 1.0 1.0;
            aspect_preference: BOTH;
         }
      }

      part {
         name:          "elm.text";
         type:          TEXT;
         effect:        SOFT_SHADOW;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 16 4;
            rel2.offset: -5 -5;
            color: 224 224 224 255;
            color3: 0 0 0 64;
            text {
               font:     "content";
               size:     18;
               min:      0 0;
               align:    0 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part {	  name: "over1";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            rel2.relative: 1.0 0.5;
            visible: 1;
            color: 255 255 255 0;
         }
      }
      part { name: "over2";
         mouse_events: 1;
         repeat_events: 1;
         ignore_flags: ON_HOLD;
         type: RECT;
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
            visible: 1;
         }
      }
      part { name: "over3";
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            image {
               normal: "bt_glow.png";
               border: 12 12 12 12;
            }
            fill.smooth : 1;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program {
         name:   "button_click";
         signal: "mouse,down,1";
         source: "over2";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
      }
      program {
         name:   "button_unclick";
         signal: "mouse,up,1";
         source: "over2";
         action: STATE_SET "default" 0.0;
         target: "button_image";
      }
      program {
         name:   "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program {
         name:   "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program {
         name:   "button_unclick3";
         signal: "mouse,up,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group { name: "elm/button/base/mediaplayer";
   alias: elm/button/base/view_list2;
   images {
      image: "mp_bt_hilight.png" COMP;
   }
   parts {
      part { name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }


      part{ name: "shadow";
         clip_to: "disclip";
         mouse_events: 0;
         description{ state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            image.normal: "sel_shad.png";
            image.border: 6 6 6 6;
            color: 255 255 255 200;
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: 0 2;
            rel2.offset: 0 -1;
            image {
               normal: "sel_bg.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
            color: 255 255 255 128;
         }
      }


      part { name: "button_image";
         type: RECT;
         mouse_events: 1;
         description {
            color: 255 255 255 0;
            state: "default" 0.0;
            visible: 1;
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
         }
      }

 part { name: "elm.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
               fixed: 1 0;
	       visible: 0;
	       align: 0.0 0.5;
	       rel1.offset: 4 4;
	       rel2.offset: 3 -5;
	       rel2.relative: 0.0 1.0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
               fixed: 1 0;
	       visible: 1;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel2.offset: 4 -5;
	    }
	    description { state: "icononly" 0.0;
	       inherit: "default" 0.0;
               fixed: 0 0;
	       visible: 1;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       rel2.offset: -5 -5;
	       rel2.relative: 1.0 1.0;
	       aspect_preference: VERTICAL;
	    }
	 }
         part {
	    name:          "elm.text";
	    type:          TEXT;
	    effect:        SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to_x: "elm.swallow.content";
	       rel1.relative: 1.0 0.0;
               rel1.offset: 0 4;
	       rel2.offset: -5 -5;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       text {
		  font:     "Sans,Edje-Vera";
		  size:     10;
		  min:      0 0;
		  align:    0.5 0.5;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       text.min: 1 1;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	    }
	    description { state: "disabled_visible" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	       visible: 1;
	       text.min: 1 1;
	    }
	 }
    
       part {	  name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.5;
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	    }
	 }
	 part { name: "over2";
	    mouse_events: 1;
	    repeat_events: 1;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       visible: 0;
	    }
	 }
         part { name: "over3";
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 255 255 255 0;
	       fill.smooth : 0;
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }

     
      part { name: "shine_white";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 200;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "sel_shine_white.png";
               border: 12 12 6 6;
            }
         }
      }
      part { name: "shine_black";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 200;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "sel_shine_black.png";
               border: 12 12 6 6;
            }
         }
      }
      part { name: "hilight";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 80;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "sel_hilight.png";
               border: 12 12 6 6;
            }
         }
      }
 	 part { name: "disabler";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       visible: 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
   }
   programs {
      program {
         name:   "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program {
         name:   "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program {
         name:   "button_unclick3";
         signal: "mouse,up,1";
         source: "over3";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program {
         name:   "button_mouse_in";
         signal: "mouse,in";
         source: "over3";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:   "button_mouse_out";
         signal: "mouse,out";
         source: "over3";
         action:  STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target:  "disclip";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         transition: DECELERATE 0.5;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

///////////////////////////////////////////////////////////////////////////////
group { name: "elm/button/base/default";
   images {
      image: "bt_base1.png" COMP;
      image: "bt_base2.png" COMP;
      image: "bt_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "bt_glow.png" COMP;
   }
   parts {
      part { name: "button_image";
         mouse_events: 1;
         description { state: "default" 0.0;
            image {
               normal: "bt_base2.png";
               border: 7 7 7 7;
            }
            image.middle: SOLID;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "bt_base1.png";
            image.middle: SOLID;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.offset: 4 4;
            rel2.offset: 3 -5;
            rel2.relative: 0.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
            rel2.offset: 4 -5;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            rel2.offset: -5 -5;
            rel2.relative: 1.0 1.0;
            aspect_preference: BOTH;
         }
      }
      part {
         name:          "elm.text";
         type:          TEXT;
         effect:        SOFT_SHADOW;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 0 4;
            rel2.offset: -5 -5;
            color: 224 224 224 255;
            color3: 0 0 0 64;
            text {
               font:     "content";
               size:     10;
               min:      0 0;
               align:    0.5 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part {	  name: "over1";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel2.relative: 1.0 0.5;
            image {
               normal: "bt_hilight.png";
               border: 7 7 7 0;
            }
         }
      }
      part { name: "over2";
         mouse_events: 1;
         repeat_events: 1;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            image {
               normal: "bt_shine.png";
               border: 7 7 7 7;
            }
         }
      }
      part { name: "over3";
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            image {
               normal: "bt_glow.png";
               border: 12 12 12 12;
            }
            fill.smooth : 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program {
         name:   "button_click";
         signal: "mouse,down,1";
         source: "over2";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
      }
      program {
         name:   "button_unclick";
         signal: "mouse,up,1";
         source: "over2";
         action: STATE_SET "default" 0.0;
         target: "button_image";
      }
      program {
         name:   "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program {
         name:   "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program {
         name:   "button_unclick3";
         signal: "mouse,up,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group { name: "elm/genlist/item/enna/default";
   alias: "elm/genlist/item_odd/enna/default";
   alias: "elm/genlist/item/view_list2/default";
   alias: "elm/genlist/item_odd/view_list2/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "labels" "elm.text";
   data.item: "icons" "elm.swallow.icon elm.swallow.end";
   data.item: "treesize" "20";
   //      data.item: "states" "";
   images {
      image: "sel_bg.png" COMP;
      image: "sel_shad.png" COMP;
      image: "sel_hilight.png" COMP;
      image: "sel_shine_white.png" COMP;
      image: "sel_shine_black.png" COMP;
      image: "separator_h.png" COMP;
   }
   parts {
      part {
         name: "base";
         mouse_events: 0;
         type: RECT;
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
         }
      }
      part{ name: "shadow";
         clip_to: "disclip";
         mouse_events: 0;
         description{ state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image.normal: "sel_shad.png";
            image.border: 6 6 6 6;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 200;
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.offset: 0 2;
            rel2.offset: 0 -1;
            image {
               normal: "sel_bg.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 128;
         }
      }

      part {
         name: "separator";
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 100;
            rel1.relative: 0 1;
            rel1.to: "bg";
            rel2.relative: 1 1;
            rel2.to: "bg";
            rel2.offset: 0 1;

            image {
               normal: "separator_h.png";
               border: 16 16 0 0;
            }
            fill.smooth: 0;
         }
      }

      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               //to: "bg";
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               //to: "bg";
               relative: 0.0  1.0;
               offset:   4   -4;
            }
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type:           TEXT;
         effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 1 1;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   8 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 200 200 200 255;
            color3: 0 0 0 32;
            text {
               font: "content";
               size: 20;
               //min: 1 1;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 232 232 232 255;
            color3: 0 0 0 64;
         }
      }

      part { name: "shine_white";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "sel_shine_white.png";
               border: 12 12 6 6;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 200;
         }
      }
      part { name: "shine_black";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "sel_shine_black.png";
               border: 12 12 6 6;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 200;
         }
      }
      part { name: "hilight";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "sel_hilight.png";
               border: 12 12 6 6;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 80;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
      part {
         name:           "event";
         type:           RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "shadow";
         target:  "separator";
         target:  "shine_white";
         target:  "shine_black";
         target:  "hilight";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "shadow";
         target:  "separator";
         target:  "shine_white";
         target:  "shine_black";
         target:  "hilight";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group { name: "elm/genlist/item/enna_list/default";
   alias: "elm/genlist/item_odd/enna_list/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "labels" "elm.text elm.text.sub";
   data.item: "icons" "elm.swallow.icon elm.swallow.end";
   data.item: "treesize" "20";
   //      data.item: "states" "";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
   }
   parts {
      part { name:  "event";
         type:           RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      /* part {
         name: "base_sh";
         mouse_events: 0;
         description {
         state: "default" 0.0;
         align: 0.0 0.0;
         min: 0 10;
         fixed: 1 1;
         rel1 {
         to: "base";
         relative: 0.0 1.0;
         offset: 0 0;
         }
         rel2 {
         to: "base";
         relative: 1.0 1.0;
         offset: -1 0;
         }
         image {
         normal: "ilist_item_shadow.png";
         }
         fill.smooth: 0;
         }
         }
         part { name: "base";
         mouse_events: 0;
         description {
         state: "default" 0.0;
         image {
         normal: "ilist_1.png";
         border: 2 2 2 2;
         }
         fill.smooth: 0;
         }
         }*/
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset:   4   -5;
            }
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to_x: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to_x: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "endclip";
         clip_to: "disclip";
         description { state: "default" 0.0;
            color: 255 255 255 100;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "endclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 1;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type: TEXT;
         effect: SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   0  4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  0.7;
               offset:   -1  0;
            }
            color: 200 200 200 255;
            color3: 0 0 0 0;
            text {
               font: "content";
               size: 20;
               min: 1 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 224 224 224 255;
            color3: 0 0 0 64;
         }
      }
      part { name: "elm.text.sub";
         clip_to: "disclip";
         type: TEXT;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //                  min: 16 16;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.5;
               offset:   0 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 128 128 128 255;
            color3: 0 0 0 0;
            text {
               font: "content";
               size: 16;
               min: 1 1;
               //                  min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 255;
            color3: 0 0 0 32;
         }
      }
      part { name: "fg1";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program { name: "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         target:  "elm.text.sub";
         transition: LINEAR 0.1;
         after: "go_active_2";
      }
      program { name: "go_active_2";
         in: 0.6 0;
         action:  STATE_SET "selected" 0.0;
         target:  "endclip";
         target:  "elm.swallow.end";
         transition: LINEAR 0.5;
      }
      program { name: "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action: ACTION_STOP;
         target: "go_active";
         target: "go_active_2";
         after: "go_passive_2";
      }
      program { name: "go_passive_2";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         target:  "elm.text.sub";
         target:  "endclip";
         target:  "elm.swallow.end";
         transition: LINEAR 0.1;
      }
      program { name: "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program { name: "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group { name: "elm/button/base/enna_list";
   images {
      image: "bt_base1.png" COMP;
      image: "bt_base2.png" COMP;
      image: "bt_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "bt_glow.png" COMP;
      //~ image: "bt_dis_base.png" COMP;
      //~ image: "bt_dis_hilight.png" COMP;
   }
   parts {
      part { name: "button_image";
         mouse_events: 1;
         description { state: "default" 0.0;
            image {
               normal: "bt_base2.png";
               border: 7 7 7 7;
            }
            image.middle: SOLID;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "bt_base1.png";
            image.middle: SOLID;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
            //~ image {
            //~ normal: "bt_dis_base.png";
            //~ border: 4 4 4 4;
            //~ }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.offset: 4 4;
            rel2.offset: 3 -5;
            rel2.relative: 0.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel2.offset: 4 -5;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            rel2.offset: -5 -5;
            rel2.relative: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         effect: SOFT_SHADOW;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 10 0;
            rel2.offset: -20 0;
            color: 224 224 224 255;
            color3: 0 0 0 64;
            text {
               font: "content";
               size: 18;
               min: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 255;
            color3: 0 0 0 0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part { name: "over1";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel2.relative: 1.0 0.5;
            image {
               normal: "bt_hilight.png";
               border: 7 7 7 0;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over2";
         mouse_events: 1;
         repeat_events: 1;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            image {
               normal: "bt_shine.png";
               border: 7 7 7 7;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over3";
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            image {
               normal: "bt_glow.png";
               border: 12 12 12 12;
            }
            fill.smooth : 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1";
         source: "over2";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1";
         source: "over2";
         action: STATE_SET "default" 0.0;
         target: "button_image";
      }
      program { name: "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program { name: "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program { name: "button_unclick3";
         signal: "mouse,up,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "button_image";
         target: "over1";
         target: "over2";
         target: "disabler";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button_image";
         target: "over1";
         target: "over2";
         target: "disabler";
         after: "enable_text";
      }
      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
               set_state(PART:"elm.text", "visible", 0.0);
            else
               set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group { name: "elm/check/base/enna_list";
   images {
      image: "check.png" COMP;
      image: "bt_base2.png" COMP;
   }
   parts {
      part { name: "sel";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            color: 255 255 255 255;
            image {
               normal: "bt_base2.png";
               border: 7 7 7 7;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bg";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      part { name: "check";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to: "bg";
               offset: 1 1;
            }
            rel2 {
               to: "bg";
               offset: -2 -2;
            }
            visible: 0;
            color: 255 255 255 255;
            image.normal: "check.png";
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 128 128 128 128;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            visible: 1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            color: 255 255 255 255;
            align: 0.0 0.5;
            rel1 {
               to_x: "bg";
               relative: 1.0 0.0;
               offset: 1 1;
            }
            rel2 {
               to_x: "bg";
               relative: 1.0 1.0;
               offset: 2 -2;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            fixed: 1 1;
            visible: 1;
            aspect: 1.0 1.0;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to_x: "elm.swallow.content";
               relative: 1.0 0.0;
               offset: 1 1;
            }
            rel2 {
               offset: -20 -2;
            }
            color: 224 224 224 255;
            text {
               font: "content";
               size: 18;
               min: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 255;
            visible: 1;
            text.min: 1 1;
         }
      }
      part { name: "events";
         type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "over1";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel2.relative: 1.0 0.5;
            image {
               normal: "bt_hilight.png";
               border: 7 7 7 0;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over2";
         mouse_events: 0;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            image {
               normal: "bt_shine.png";
               border: 7 7 7 7;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over3";
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            image {
               normal: "bt_glow.png";
               border: 12 12 12 12;
            }
            fill.smooth : 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "click";
         signal: "mouse,up,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,check,toggle" "";
      }
      program { name: "check_on";
         signal: "elm,state,check,on";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "check";
      }
      program { name: "check_off";
         signal: "elm,state,check,off";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "check";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
         target: "sel";
         target: "over1";
         target: "over2";
         target: "over3";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);

            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.swallow.content", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         target: "sel";
         target: "over1";
         target: "over2";
         target: "over3";
         after: "enable_text";
      }
      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
               set_state(PART:"elm.text", "visible", 0.0);
            else
               set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}



///////////////////////////////////////////////////////////////////////////////
group { name: "elm/win/inwin/enna_minimal";
   parts {
      part {
         name: "mouse_event_catcher";
         mouse_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "base";
         type: IMAGE;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               to: "elm.swallow.content";
               offset: -30 -30;
            }
            rel2 {
               to: "elm.swallow.content";
               offset: 30 30;
            }
            image {
               normal: "volume_bg.png";
               border: 60 60 60 60;
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 1.0;
            color: 255 255 255 150;
         }
      }

      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         //	    transition: DECELERATE 0.5;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         //	    transition: DECELERATE 0.5;
         target: "base";
      }
   }
}

group { name: "elm/win/inwin/enna";
   parts {
      part {
         name: "clip";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.2 0.2;
            rel2.relative: 0.8 0.8;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 1.0;
            color: 255 255 255 255;
         }
      }
      part {
         name: "base";
         type: IMAGE;
         mouse_events: 0;
         clip_to: "clip";
         description {
            state: "default" 0.0;
            color: 255 255 255 200;
            rel1.to: "clip";
            rel2.to: "clip";
            image {
               normal: "volume_bg.png";
               border: 60 60 60 60;
            }
         }

      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clip";
         description { state: "default" 0.0;
            color: 255 255 255 255;
            fixed: 1 1;
            rel1.relative: 0.1 0.1;
            rel1.to: "base";
            rel2.relative: 0.9 0.9;
            rel2.to: "base";
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "clip";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "clip";
      }
   }
}

group { name: "elm/win/inwin/infos";
   parts {
      part {
         name: "base";
         type: IMAGE;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            image.normal: "panel_info.png";
            image.border: 38 38 38 38;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 1.0;
            color: 255 255 255 255;
         }
      }

      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            color: 255 255 255 255;
            rel1.relative: 0.1 0.1;
            rel2.relative: 0.9 0.9;
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         //	    transition: DECELERATE 0.5;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         //	    transition: DECELERATE 0.5;
         target: "base";
      }
   }
}

///////////////////////////////////////////////////////////////////////////////
group { name: "elm/notify/base/bottom";
   //this group is a design similar to the inwin group
   images {
      image: "picture_bar.png" COMP;
   }
   parts {
      part { name: "base";
         type: RECT;
         mouse_events: 0;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.offset: 16 16;
            rel2.offset: -15 -15;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 2.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 1.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "pop";
         mouse_events: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel1.offset: -15 -15;
            rel2.to: "elm.swallow.content";
            rel2.offset: 16 16;
            image {
               normal: "picture_bar.png";
               border: 32 32 32 32;
            }
            //image.middle: SOLID;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "base";
      }
      program { name: "show_2";
         signal: "show";
         action: STATE_SET "default" 0.0;
         target: "base";
         after: "show_3";
      }
      program { name: "show_3";
         signal: "show";
         action: STATE_SET "visible" 0.0;
         target: "base";
         transition: LINEAR 0.5;
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group { name: "elm/frame/base/default";
   images {
      image: "black_frame.png" COMP;
   }
   parts {
      part { name: "base.shadow";
         mouse_events:  0;
         description { state: "default" 0.0;
            visible: 1;
            image.normal: "shad_circ.png";
            image.border: 16 16 16 16;
            rel1.to: "base";
            rel1.offset: -16 -16;
            rel2.to: "base";
            rel2.offset: 16 16;
            fill.smooth: 0;
            image.middle: 0;
         }
      }
      part { name: "base";
         mouse_events:  0;
         description { state:    "default" 0.0;
            color: 255 255 255 200;
            rel1.offset: 32 32;
            rel2.offset: -32 -32;
            image {
               normal: "black_frame.png";
               border: 8 8 8 8 ;
            }
         }
      }


      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.offset: 16 16;
            rel2.to: "base";
            rel2.offset: -15 -15;
         }
      }
   }
}

///////////////////////////////////////////////////////////////////////////////
group { name: "elm/slider/horizontal/default";
   images {
      image: "sl_bg.png" COMP;
      image: "sl_bg_over.png" COMP;
      image: "sl_bt_0.png" COMP;
      image: "sl_bt_1.png" COMP;
      image: "sl_bt_2.png" COMP;
      image: "sl_bt2_0_0.png" COMP;
      image: "sl_bt2_0_1.png" COMP;
      image: "sl_bt2_0_2.png" COMP;
      image: "sl_bt2_1.png" COMP;
      image: "sl_bt2_2.png" COMP;
      image: "sl_units.png" COMP;
      image: "progress_bar_content.png" COMP;
   }
   parts {
      part { name: "base";
         mouse_events: 0;
         description { state: "default" 0.0;
            max: 99999 6;
            min: 0 6;
            rel1 { to: "bg";
               offset: 1 0;
            }
            rel2 { to: "bg";
               offset: -2 -1;
            }
            image.normal: "sl_bg.png";
            fill.smooth: 0;
         }
      }

      part { name: "level2";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            rel1 {
               to_y: "base";
               to_x: "elm.dragable.slider";
               relative: 0.5 0.0;
            }
            rel2.to: "base";
            color: 255 0 0 200;
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "base_over";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.offset: -1 -1;
            rel2.to: "base";
            rel2.offset: 0 0;
            image {
               normal: "sl_bg_over.png";
               border: 3 3 3 3;
            }
            fill.smooth: 0;
         }
      }
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.swallow.bar";
            rel2.to: "elm.swallow.bar";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.bar";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            min: 48 24;
            max: 99999 24;
            align: 1.0 0.5;
            rel1 {
               to_x: "elm.text";
               relative: 1.0 0.0;
               offset: 2 0;
            }
            rel2 {
               to_x: "elm.units";
               relative: 0.0 1.0;
               offset: -3 -1;
            }
         }
      }

      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.0 0.5;
            rel1 {
               offset: 4 0;
               to_y: "elm.swallow.bar";
            }
            rel2 {
               offset: 3 -1;
               relative: 0.0 1.0;
               to_y: "elm.swallow.bar";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel2.offset: 4 -1;
         }
      }
      part { name: "level";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 8 8;
            rel1.to: "base";
            rel2 {
               to_y: "base";
               to_x: "elm.dragable.slider";
               relative: 0.5 1.0;
            }
            image.normal: "progress_bar_content.png";
            image.border: 4 4 4 4;
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: -1 4;
            rel2.to_x: "elm.swallow.content";
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -5;
            color: 0 0 0 255;
            text {
               font: "content";
               size: 20;
               min: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            rel1.offset: 0 4;
            rel2.offset: 0 -5;
         }
      }
      part { name: "units";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to_x: "elm.units";
               offset: 0 5;
            }
            image {
               normal: "sl_units.png";
               border: 0 5 3 8;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.units";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1.relative: 1.0 0.0;
            rel1.offset: 0 8;
            rel2.relative: 1.0 1.0;
            rel2.offset: 0 -9;
            color: 0 0 0 255;
            text {
               font: "content";
               size: 20;
               min: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            text.min: 1 1;
            rel1.offset: -5 0;
            rel2.offset: -5 -1;
         }
      }
      part { name: "elm.dragable.slider";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "bg";
         }
         description { state: "default" 0.0;
            min: 0 24;
            max: 0 24;
            fixed: 1 1;
            rel1 {
               relative: 0.5 0.0;
               to_x: "bg";
            }
            rel2 {
               relative: 0.5 1.0;
               to_x: "bg";
            }
            color: 255 0 0 100;
         }
      }
      part { name: "button_events";
         type: RECT;
         dragable {
            events: "elm.dragable.slider";
         }
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 16 16;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1.to_x: "elm.dragable.slider";
            rel2.to_x: "elm.dragable.slider";
            color: 0 0 0 0;
         }
      }
      part { name: "button0";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            max: 17 999;
            min: 17 24;
            rel1.to: "elm.dragable.slider";
            rel2.to: "elm.dragable.slider";
            image {
               normal: "sl_bt_0.png";
               border: 5 5 5 10;
            }
            fill.smooth: 0;
         }
      }
      part { name: "button1";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "button0";
            rel2 {
               to: "button0";
               relative: 1.0 0.5;
               offset: -1 -5;
            }
            image {
               normal: "sl_bt_1.png";
               border: 5 5 5 0;
            }
         }
      }
      part { name: "button2";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "button0";
            rel2.to: "button0";
            image {
               normal: "sl_bt_2.png";
               border: 5 5 5 10;
            }
            fill.smooth: 0;
         }
      }
      part { name: "button3";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 8 32;
            align: 1.0 0.5;
            rel1 {
               to_x: "elm.indicator";
               to_y: "button4";
               relative: 0.0 0.0;
               offset: -7 0;
            }
            rel2 {
               to: "button4";
               relative: 0.0 1.0;
               offset: -1 -1;
            }
            image {
               normal: "sl_bt2_0_0.png";
               border: 6 0 6 12;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "button4";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            max: 15 999;
            min: 15 32;
            rel1 {
               to_x: "button0";
               to_y: "elm.indicator";
               offset: 0 0;
            }
            rel2.to: "button0";
            image {
               normal: "sl_bt2_0_1.png";
               border: 0 0 6 12;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "button5";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 8 32;
            align: 0.0 0.5;
            rel1 {
               to: "button4";
               relative: 1.0 0.0;
               offset: 0 0;
            }
            rel2 {
               to_x: "elm.indicator";
               to_y: "button4";
               relative: 1.0 1.0;
               offset: 6 -1;
            }
            image {
               normal: "sl_bt2_0_2.png";
               border: 0 6 6 12;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.indicator";
         type: TEXT;
         mouse_events: 0;
         effect: SOFT_SHADOW;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 0.5 1.0;
            rel1 {
               to: "button0";
               relative: 0.0 -0.25;
               offset: 0 0;
            }
            rel2 {
               to_x: "button0";
               relative: 1.0 -0.25;
               offset: -1 0;
            }
            color: 224 224 224 255;
            color3: 0 0 0 64;
            text {
               font:     "content";
               size:     20;
               min:      0 0;
               align:    0.5 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            rel1.offset: 0 -1;
            rel2.offset: -1 -1;
         }
      }
      part { name: "button6";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "button3";
            rel2 {
               to: "button5";
               relative: 1.0 0.3;
               offset: -1 -1;
            }
            image {
               normal: "sl_bt2_1.png";
               border: 5 5 5 0;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "button7";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "button3";
            rel2.to: "button5";
            image {
               normal: "sl_bt2_2.png";
               border: 5 5 5 0;
               middle: 0;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "units_show";
         signal: "elm,state,units,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.units";
         target: "units";
      }
      program { name: "units_hide";
         signal: "elm,state,units,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.units";
         target: "units";
      }
      program { name: "invert_on";
         signal: "elm,state,inverted,on";
         source: "elm";
         action:  STATE_SET "inverted" 0.0;
         target: "level";
         target: "level2";
      }
      program { name: "invert_off";
         signal: "elm,state,inverted,off";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "level";
         target: "level2";
      }
      program { name: "val_show";
         signal: "mouse,down,*";
         source: "elm.dragable.slider";
         action:  STATE_SET "visible" 0.0;
         target: "elm.indicator";
         target: "button3";
         target: "button4";
         target: "button5";
         target: "button6";
         target: "button7";
      }
      program { name: "val_hide";
         signal: "mouse,up,*";
         source: "elm.dragable.slider";
         action:  STATE_SET "default" 0.0;
         target: "elm.indicator";
         target: "button3";
         target: "button4";
         target: "button5";
         target: "button6";
         target: "button7";
      }
   }
}

///////////////////////////////////////////////////////////////////////////////

group { name: "elm/label/base/enna";
   styles
   {
      style { name: "textblock_style";
         base: "font=content font_size=20 align=center effect=glow color=#EEE color3=#FFF wrap=word";
         tag:  "br" "\n";
         tag:  "hilight" "+ font=content_bd";
         tag:  "b" "+ font=content_bd";
         tag:  "tab" "\t";
         tag:  "c" "+ align=center font_size=24 font=content_bd color=#A0D026A0 color2=#A0D026A0 style=GLOW";
      }
   }
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            text {
               style: "textblock_style";
               min: 1 1;
            }
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group { name: "elm/photocam/base/default";
   script {
      public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
      public timer0(val) {
         new v;
         v = get_int(sbvis_v);
         if (v) {
            v = get_int(sbalways_v);
            if (!v) {
               emit("do-hide-vbar", "");
               set_int(sbvis_v, 0);
            }
         }
         v = get_int(sbvis_h);
         if (v) {
            v = get_int(sbalways_h);
            if (!v) {
               emit("do-hide-hbar", "");
               set_int(sbvis_h, 0);
            }
         }
         set_int(sbvis_timer, 0);
         return 0;
      }
   }
   images {
      image: "bt_sm_base2.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "sb_runnerh.png" COMP;
      image: "sb_runnerv.png" COMP;
   }
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
            color: 255 255 255 0;
         }
      }
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
         }
      }

      part { name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar_clip";
         clip_to: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 17;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset:   -2 0;
            }
            rel2 {
               relative: 1.0 0.0;
               offset:   -2 -1;
               to_y:     "sb_hbar";
            }
         }
      }
      part { name: "sb_vbar_runner";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 3 3;
            max: 3 99999;
            rel1.to:       "sb_vbar";
            rel2.to:       "sb_vbar";
            image {
               normal: "sb_runnerv.png";
               border: 0 0 4 4;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.vbar";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 17;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
      }
      part { name: "sb_vbar_over1";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_vbar_over2";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }

      part { name: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar_clip";
         clip_to: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 17;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset:   0 -2;
            }
            rel2 {
               relative: 0.0 1.0;
               offset:   -1 -2;
               to_x:     "sb_vbar";
            }
         }
      }
      part { name: "sb_hbar_runner";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 3 3;
            max: 99999 3;
            rel1.to:       "sb_hbar";
            rel2.to:       "sb_hbar";
            image {
               normal: "sb_runnerh.png";
               border: 4 4 0 0;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.hbar";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 17;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
      }
      part { name: "sb_hbar_over1";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_hbar_over2";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         script {
            set_state(PART:"sb_hbar_clip", "hidden", 0.0);
            set_state(PART:"sb_vbar_clip", "hidden", 0.0);
            set_int(sbvis_h, 0);
            set_int(sbvis_v, 0);
            set_int(sbalways_v, 0);
            set_int(sbalways_h, 0);
            set_int(sbvis_timer, 0);
         }
      }

      program { name: "vbar_show";
         signal: "elm,action,show,vbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_hide";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_show_always";
         signal: "elm,action,show_always,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               set_int(sbalways_v, 1);
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
         }
      }
      program { name: "vbar_show_notalways";
         signal: "elm,action,show_notalways,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_v);
            if (v) {
               set_int(sbalways_v, 0);
               v = get_int(sbvis_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
         }
      }
      program { name: "sb_vbar_show";
         signal: "do-show-vbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 1.0;
         target: "sb_vbar_clip";
      }
      program { name: "sb_vbar_hide";
         signal: "do-hide-vbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 1.0;
         target: "sb_vbar_clip";
      }

      program { name: "hbar_show";
         signal: "elm,action,show,hbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_hide";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_show_always";
         signal: "elm,action,show_always,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               set_int(sbalways_h, 1);
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
         }
      }
      program { name: "hbar_show_notalways";
         signal: "elm,action,show_notalways,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_h);
            if (v) {
               set_int(sbalways_h, 0);
               v = get_int(sbvis_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
         }
      }
      program { name: "sb_hbar_show";
         signal: "do-show-hbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 1.0;
         target: "sb_hbar_clip";
      }
      program { name: "sb_hbar_hide";
         signal: "do-hide-hbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 1.0;
         target: "sb_hbar_clip";
      }

      program { name: "scroll";
         signal: "elm,action,scroll";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
            v = get_int(sbvis_timer);
            if (v > 0) cancel_timer(v);
            v = timer(2.0, "timer0", 0);
            set_int(sbvis_timer, v);
         }
      }
   }
}

///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/entry/base/default";
      styles
	{
	   style { name: "entry_textblock_style";
 	      base: "font=content font_size=14 align=left color=#fff wrap=word";
	      tag:  "br" "\n";
	      tag:  "tab" "\t";
	      tag:  "em" "+ font=content:style=Oblique";
	      tag:  "b" "+ font=content_bd";
	      tag:  "link" "+ color=#800 underline=on underline_color=#8008";
	      tag:  "hilight" "+ font=content_bd";
	   }
	   style { name: "entry_textblock_disabled_style";
 	      base: "font=content font_size=14 align=left color=#fff wrap=word";
	      tag:  "br" "\n";
	      tag:  "tab" "\t";
	      tag:  "em" "+ font=content:style=Oblique";
	      tag:  "b" "+ font=content_bd:style=Bold";
	      tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
	      tag:  "hilight" "+ font=content_bd";
	   }
	}
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: EDITABLE;
	    select_mode: EXPLICIT;
	    multiline: 1;
	    source: "elm/entry/selection/default"; // selection under
//	    source2: "X"; // selection over
//	    source3: "X"; // cursor under
	    source4: "elm/entry/cursor/default"; // cursorover
	    source5: "elm/entry/anchor/default"; // anchor under
//	    source6: "X"; // anchor over
	    description { state: "default" 0.0;
               fixed: 1 0;
	       text {
		  style: "entry_textblock_style";
		  min: 0 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_textblock_disabled_style";
		  min: 0 1;
	       }
	    }
	 }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
      }
   }

    group { name: "elm/entry/base-charwrap/default";
      styles
	{
	   style { name: "entry_textblock_style_charwrap";
 	      base: "font=content font_size=14 align=left color=#fff wrap=char";
	      tag:  "br" "\n";
	      tag:  "tab" "\t";
	      tag:  "em" "+ font=content:style=Oblique";
	      tag:  "b" "+ font=content_bd";
	      tag:  "link" "+ color=#800 underline=on underline_color=#8008";
	      tag:  "hilight" "+ font=content_bd";
	   }
	   style { name: "entry_textblock_disabled_style_charwrap";
 	      base: "font=content font_size=14 align=left color=#fff wrap=char";
	      tag:  "br" "\n";
	      tag:  "tab" "\t";
	      tag:  "em" "+ font=content:style=Oblique";
	      tag:  "b" "+ font=content_bd";
	      tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
	      tag:  "hilight" "+ font=content_bd";
	   }
	}
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: EDITABLE;
	    select_mode: EXPLICIT;
	    multiline: 1;
	    source: "elm/entry/selection/default"; // selection under
//	    source2: "X"; // selection over
//	    source3: "X"; // cursor under
	    source4: "elm/entry/cursor/default"; // cursorover
	    source5: "elm/entry/anchor/default"; // anchor under
//	    source6: "X"; // anchor over
	    description { state: "default" 0.0;
               fixed: 1 0;
	       text {
		  style: "entry_textblock_style_charwrap";
		  min: 0 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_textblock_disabled_style_charwrap";
		  min: 0 1;
	       }
	    }
	 }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
      }
   }


   group { name: "elm/entry/base-nowrap/default";
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: EDITABLE;
	    select_mode: EXPLICIT;
	    multiline: 1;
	    source: "elm/entry/selection/default"; // selection under
	    source4: "elm/entry/cursor/default"; // cursorover
	    source5: "elm/entry/anchor/default"; // anchor under
	    description { state: "default" 0.0;
	       text {
		  style: "entry_textblock_style";
		  min: 1 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_textblock_disabled_style";
		  min: 0 1;
	       }
	    }
	 }
/*
	 part { name: "sel";
	    type: RECT;
            mouse_events: 0;
	    description { state: "default" 0.0;
               align: 1.0 1.0;
               max: 16 16;
               aspect: 1.0 1.0;
               color: 255 0 0 0;
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 0 0 50;
            }
	 }
 */
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
/*
	 program { name: "selmode0";
            signal: "elm,state,select,on";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    target: "sel";
	 }
	 program { name: "selmode1";
            signal: "elm,state,select,off";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "sel";
	 }
 */
      }
   }

   group { name: "elm/entry/base-single/default";
      styles
	{
	   style { name: "entry_single_textblock_style";
	      base: "font=content font_size=14 align=left color=#fff wrap=none";
	      tag:  "br" "\n";
	      tag:  "tab" "\t";
	      tag:  "em" "+ font=content:style=Oblique";
	      tag:  "b" "+ font=content_bd";
	      tag:  "link" "+ color=#800 underline=on underline_color=#8008";
	      tag:  "hilight" "+ font=content_bd";
	   }
	   style { name: "entry_single_textblock_disabled_style";
 	      base: "font=content font_size=14 align=left color=#fff wrap=none";
	      tag:  "br" "\n";
	      tag:  "tab" "\t";
	      tag:  "em" "+ font=content:style=Oblique";
	      tag:  "b" "+ font=content_bd";
	      tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
	      tag:  "hilight" "+ font=content_bd";
	   }
	}
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: EDITABLE;
	    select_mode: EXPLICIT;
	    multiline: 0;
	    source: "elm/entry/selection/default"; // selection under
	    source4: "elm/entry/cursor/default"; // cursorover
	    source5: "elm/entry/anchor/default"; // anchor under
	    description { state: "default" 0.0;
	       text {
		  style: "entry_single_textblock_style";
		  min: 1 1;
                  max: 0 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_single_textblock_disabled_style";
	       }
	    }
	 }
         part {
             name: "bg";
             type: RECT;
             description {
                 state: "default" 0.0;
                 color: 255 255 255 0;
                 visible: 0;
             }
             description {
                 state: "disabled" 0.0;
                 color: 255 255 255 100;
                 visible: 1;
             }
         }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
            target: "bg";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
            target: "bg";
	 }
      }
   }

   group { name: "elm/entry/base-single-noedit/default";
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: PLAIN;
	    select_mode: EXPLICIT;
	    multiline: 0;
	    source: "elm/entry/selection/default"; // selection under
	    source5: "elm/entry/anchor/default"; // anchor under
	    description { state: "default" 0.0;
	       text {
		  style: "entry_single_textblock_style";
		  min: 1 1;
                  max: 0 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_single_textblock_disabled_style";
	       }
	    }
	 }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
      }
   }

   group { name: "elm/entry/base-noedit/default";
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: PLAIN;
	    select_mode: EXPLICIT;
	    multiline: 1;
	    source: "elm/entry/selection/default"; // selection under
	    source5: "elm/entry/anchor/default"; // anchor under
	    description { state: "default" 0.0;
               fixed: 1 0;
	       text {
		  style: "entry_textblock_style";
		  min: 0 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_textblock_disabled_style";
	       }
	    }
	 }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
      }
   }

   group { name: "elm/entry/base-noedit-charwrap/default";
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: PLAIN;
	    select_mode: EXPLICIT;
	    multiline: 1;
	    source: "elm/entry/selection/default"; // selection under
	    source5: "elm/entry/anchor/default"; // anchor under
	    description { state: "default" 0.0;
               fixed: 1 0;
	       text {
		  style: "entry_textblock_style_charwrap";
		  min: 0 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_textblock_disabled_style_charwrap";
	       }
	    }
	 }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
      }
   }
   
   group { name: "elm/entry/base-nowrap-noedit/default";
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: PLAIN;
	    select_mode: EXPLICIT;
	    multiline: 1;
	    source: "elm/entry/selection/default"; // selection under
	    source5: "elm/entry/anchor/default"; // anchor under
	    description { state: "default" 0.0;
	       text {
		  style: "entry_textblock_style";
		  min: 1 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_textblock_disabled_style";
	       }
	    }
	 }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
      }
   }

  group { name: "elm/entry/base-password/default";
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: PASSWORD;
	    select_mode: EXPLICIT;
	    multiline: 0;
	    source: "elm/entry/selection/default"; // selection under
	    source4: "elm/entry/cursor/default"; // cursorover
	    source5: "elm/entry/anchor/default"; // anchor under
	    description { state: "default" 0.0;
	       text {
		  style: "entry_single_textblock_style";
		  repch: "*";
		  min: 1 1;
                  max: 0 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_single_textblock_disabled_style";
	       }
	    }
	 }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
      }
   }

   group { name: "elm/entry/cursor/default";
      images {
	 image: "cur_box.png" COMP;
	 image: "cur_hi.png" COMP;
	 image: "cur_shad.png" COMP;
	 image: "cur_shine.png" COMP;
	 image: "cur_glow.png" COMP;
      }
      parts {
         part { name: "clip2";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "clip";
	       rel2.to: "clip";
               visible: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
         part { name: "clip";
	    type: RECT;
	    mouse_events: 0;
            clip_to: "clip2";
	    description { state: "default" 0.0;
	       rel1.offset: -10 0;
	       rel2.offset: 9 9;
	    }
	    description { state: "hidden" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
         part { name: "bg";
	    mouse_events: 0;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel1.offset: -2 0;
	       rel2.to: "base";
	       rel2.offset: 1 1;
	       image.border: 2 2 2 2;
	       image.normal: "cur_shad.png";
	    }
	 }
         part { name: "base";
	    mouse_events: 0;
	    scale: 1;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       min: 2 2;
	       align: 0.5 1.0;
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -1;
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -1 -1;
	       image.normal: "cur_box.png";
	    }
	 }
         part { name: "hi";
	    mouse_events: 0;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       rel2.relative: 1.0 0.5;
	       image.normal: "cur_hi.png";
	    }
	 }
         part { name: "shine";
	    mouse_events: 0;
	    clip_to: "clip";
            clip_to: "clip2";
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       rel2.relative: 1.0 0.75;
	       image.border: 2 2 1 0;
	       image.normal: "cur_shine.png";
	       fill.smooth: 0;
	    }
	 }
         part { name: "glow";
	    mouse_events: 0;
            clip_to: "clip2";
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel1.relative: 0.0 -2.0;
	       rel1.offset: -2 0;
	       rel2.to: "base";
	       rel2.relative: 1.0 0.0;
	       rel2.offset: 1 1;
	       image.border: 2 2 0 4;
	       image.normal: "cur_glow.png";
	       fill.smooth: 0;
	    }
	    description { state: "hidden" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 0;
	    }
	 }
      }
      programs {
	 program { name: "show";
            signal: "show";
	    source: "";
            action: STATE_SET "hidden" 0.0;
	    in: 1.0 0.0;
	    transition: DECELERATE 2.0;
	    target: "glow";
	    after: "show2";
	 }
	 program { name: "show2";
            action: STATE_SET "hidden" 0.0;
	    in: 0.2 0.0;
	    target: "clip";
	    after: "show3";
	 }
	 program { name: "show3";
            action: STATE_SET "default" 0.0;
	    in: 0.5 0.0;
	    target: "clip";
	    after: "show4";
	 }
	 program { name: "show4";
            action: STATE_SET "default" 0.0;
	    in: 0.5 0.0;
	    transition: DECELERATE 0.5;
	    target: "glow";
	    after: "show";
	 }
	 program { name: "focused";
	    signal: "elm,action,focus";
	    source: "elm";
            action: STATE_SET "focused" 0.0;
	    target: "clip2";
	 }
	 program { name: "unfocused";
	    signal: "elm,action,unfocus";
	    source: "elm";
            action: STATE_SET "default" 0.0;
	    target: "clip2";
	 }
      }
   }

   group { name: "elm/entry/selection/default";
      parts {
         part { name: "bg";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       color: 128 128 128 128;
	    }
	 }
      }
   }

   group { name: "elm/entry/anchor/default";
      parts {
         part { name: "bg";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       color: 128 0 0 64;
	    }
	 }
      }
   }
///////////////////////////////////////////////////////////////////////////////
 group { name: "elm/toggle/base/default";
      images {
         image: "toggle_bg.png" COMP;
	 image: "toggle_button.png" COMP;

      }
      parts {
         part { name: "bg";
	    //type: RECT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 96 32;
	       max: 96 32;
	       color: 255 255 255 255;
               image.normal: "toggle_bg.png";
               image.border: 5 5 5 5;
	    }
	 }
         part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       color: 255 255 255 255;
	    }
	 }
         part { name: "onrect";
	    type: RECT;
	    scale: 1;
	    clip_to: "clipper";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to_x: "button";
               rel1.relative: 0 0;
               rel1.offset: -64 0;
	       rel2.to_x: "button";
	       rel2.relative: 0 1;
	       color: 0 0 0 0;
	    }
	 }
         part { name: "offrect";
	    type: RECT;
	    scale: 1;
	    clip_to: "clipper";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to_x: "button";
               rel1.relative: 1 0;
	       rel2.to_x: "button";
	       rel2.offset: 64 0;
               rel2.relative: 1 1;
	       color: 0 0 0 0;
	    }
	 }
          part { name: "elm.offtext";
	    type: TEXT;
            effect: SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    clip_to: "clipper";
	    description { state: "default" 0.0;
               fixed: 1 1;
	       rel1.to: "offrect";
	       rel2.to: "offrect";
               rel1.offset: 2 2;
               rel2.offset: -1 -1;
	       color: 0 0 0 255;
               color3: 224 224 224 80;
	       text {
		  font:     "content";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text:     "OFF";
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 128;
	    }
	 }
         part { name: "elm.ontext";
	    type: TEXT;
	    effect: SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    clip_to: "clipper";
	    description { state: "default" 0.0;
               fixed: 1 1;
	       rel1.to: "onrect";
	       rel1.offset: 2 2;
	       rel2.to: "onrect";
	       rel2.offset: -1 -1;
	       color: 0 0 0 255;
	       color3: 224 224 224 80;
	       text {
		  font:     "content";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text:     "ON";
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 128;
	       color3: 0 0 0 24;
	    }
	 }
         part { name: "button";
	    
	    scale: 1;
	    clip_to: "clipper";
	    mouse_events: 1;
 	    dragable {
	       x: 1 1 0;
	       y: 0 0 0;
	       confine: "bg";
	    }
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       min: 24 32;
	       max: 24 32;
	       image.normal: "toggle_button.png";
               image.border: 5 5 5 5;
	    }
	 }
         part { name: "button_events";
	    type: RECT;
 	    dragable {
	       events: "button";
	    }
	    description { state: "default" 0.0;
	       rel1.to_x: "bg";
	       rel1.offset: 0 0;
	       rel1.relative: 0.0 0.0;
	       rel2.to_x: "bg";
	       rel2.offset: -1 -1;
	       rel2.relative: 1.0 1.0;
	       color: 0 0 0 0;
	    }
	 }
      }

    
      programs {
	 program { name:   "drag_end";
	    signal: "mouse,up,1";
	    source: "button";
	    script {
	       new Float:dx, Float:dy;
	       get_drag(PART:"button", dx, dy);
	       if (dx > 0.5)
		 {
		    set_drag(PART:"button", 1.0, 0.0);
		    emit("elm,action,toggle,on", "");
		 }
	       else
		 {
		    set_drag(PART:"button", 0.0, 0.0);
		    emit("elm,action,toggle,off", "");
		 }
	    }
	 }
	 program { name: "toggle_on";
	    signal: "elm,state,toggle,on";
	    source: "elm";
	    script {
	       set_drag(PART:"button", 100.0, 0.0);
	    }
	 }
	 program { name: "toggle_off";
	    signal: "elm,state,toggle,off";
	    source: "elm";
	    script {
	       set_drag(PART:"button", 0.0, 0.0);
	    }
	 }
	
      }
   }
