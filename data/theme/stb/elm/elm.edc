group { name: "elm/scroller/base/default";
   alias: "elm/list/base/default";
   alias: "elm/genlist/base/default";
   alias: "elm/gengrid/base/default";
    images {
       image: "scrollbar-knob.png" COMP;
       image: "scrollbar-bg.png" COMP;
    }
    script {
       public sbvis_v, sbvis_h, sbalways_v, sbalways_h;
    }
    parts {
       part { name: "bg";
          type: RECT;
          description { state: "default" 0.0;
             rel1.offset: 1 1;
             rel2.offset: -2 -2;
             color: 0 0 0 0;
          }
       }
       part { name: "clipper";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "bg";
             rel2.to: "bg";
          }
       }
       part { name: "elm.swallow.content";
          clip_to: "clipper";
          type: SWALLOW;
          description { state: "default" 0.0;
             rel1.offset: 1 1;
             rel2.offset: -2 -2;
          }
       }
       part { name: "conf_over";
          mouse_events:  0;
          description { state: "default" 0.0;
             rel1.offset: 0 0;
             rel2.offset: -1 -1;
          }
       }
       part { name: "sb_vbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_vbar_clip";
          clip_to: "sb_vbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_vbar";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             fixed: 1 1;
             visible: 0;
             min: 2 32;
             align: 1.0 0.0;
             rel1 {
                relative: 1.0 0.0;
                offset:   -8 25;
             }
             rel2 {
                relative: 1.0 0.0;
                offset:   -7 -7;
                to_y:     "sb_hbar";
             }
          }
       }
       part { name: "sb_vbar_runner";
          clip_to: "sb_vbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             min: 3 3;
             max: 3 99999;
             rel1.to:       "sb_vbar";
             rel2.to:       "sb_vbar";
             fixed: 1 1;
          }
       }
       part { name: "vknob-bg";
          type: IMAGE;
          mouse_events: 0;
          clip_to: sb_vbar_clip;
          description { state: "default" 0.0;
            image.normal: "scrollbar-bg.png";
            image.border: 1 1 3 2;
            max: 3 99999;
            rel1 {
            	relative: 1.0 0.0;
            	offset: -10 25;
            }
            rel2 {
            	relative: 1.0 1.0;
            	offset: -6 -25;
            }
          }
       }
       part { name: "elm.dragable.vbar";
          clip_to: "sb_vbar_clip";
          mouse_events: 0;
          dragable {
             x: 0 0 0;
             y: 1 1 0;
             confine: "sb_vbar";
          }
          description { state: "default" 0.0;
             fixed: 1 1;
             min: 2 12;
             rel1 {
                relative: 1.0  0.5;
                offset:   -3    0;
                to: "sb_vbar";
             }
             rel2 {
                relative: 1.0  0.5;
                offset:   -1    0;
                to: "sb_vbar";
             }
             image {
                normal: "scrollbar-knob.png";
             }
          }
       }
       part { name: "sb_hbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_hbar_clip";
          clip_to: "sb_hbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_hbar";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             fixed: 1 1;
             visible: 0;
             min: 17 17;
             align: 0.0 1.0;
             rel1 {
                relative: 0.0 1.0;
                offset:   0 -2;
             }
             rel2 {
                relative: 0.0 1.0;
                offset:   -1 -2;
                to_x:     "sb_vbar";
             }
          }
       }
       part { name: "sb_hbar_runner";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             min: 3 3;
             max: 99999 3;
             rel1.to:       "sb_hbar";
             rel2.to:       "sb_hbar";
          }
       }
       part { name: "elm.dragable.hbar";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          dragable {
             x: 1 1 0;
             y: 0 0 0;
             confine: "sb_hbar";
          }
          description { state: "default" 0.0;
             fixed: 1 1;
             min: 17 17;
             rel1 {
                relative: 0.5  0.5;
                offset:   0    0;
                to: "sb_hbar";
             }
             rel2 {
                relative: 0.5  0.5;
                offset:   0    0;
                to: "sb_hbar";
             }
          }
       }
       part { name: "sb_hbar_over1";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.relative: 1.0 0.5;
             rel2.to: "elm.dragable.hbar";
          }
       }
       part { name: "sb_hbar_over2";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.to: "elm.dragable.hbar";
          }
       }
    }
    programs {
       program { name: "load";
          signal: "load";
          source: "";
          script {
             set_state(PART:"sb_hbar_clip", "hidden", 0.0);
             set_state(PART:"sb_vbar_clip", "hidden", 0.0);
             set_int(sbvis_h, 0);
             set_int(sbalways_v, 0);
             set_int(sbalways_h, 0);

             emit("do-show-vbar", "");
             set_int(sbvis_v, 1);
          }
       }

       program { name: "vbar_show";
          signal: "elm,action,show,vbar";
          source: "elm";
          action:  STATE_SET "default" 0.0;
          target: "sb_vbar_clip_master";
       }
       program { name: "vbar_hide";
          signal: "elm,action,hide,vbar";
          source: "elm";
          action:  STATE_SET "hidden" 0.0;
          target: "sb_vbar_clip_master";
       }
       program { name: "vbar_show_always";
          signal: "elm,action,show_always,vbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbvis_v);
             v |= get_int(sbalways_v);
             if (!v) {
                set_int(sbalways_v, 1);
                emit("do-show-vbar", "");
                set_int(sbvis_v, 1);
             }
          }
       }
       program { name: "vbar_show_notalways";
          signal: "elm,action,show_notalways,vbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbalways_v);
             if (v) {
                set_int(sbalways_v, 0);
                v = get_int(sbvis_v);
                if (!v) {
                   emit("do-hide-vbar", "");
                   set_int(sbvis_v, 0);
                }
             }
          }
       }
       program { name: "sb_vbar_show";
          signal: "do-show-vbar";
          source: "";
          action:  STATE_SET "default" 0.0;
          transition: LINEAR 1.0;
          target: "sb_vbar_clip";
       }
       program { name: "sb_vbar_hide";
          signal: "do-hide-vbar";
          source: "";
          action:  STATE_SET "hidden" 0.0;
          transition: LINEAR 1.0;
          target: "sb_vbar_clip";
       }

       program { name: "hbar_show";
          signal: "elm,action,show,hbar";
          source: "elm";
          action:  STATE_SET "default" 0.0;
          target: "sb_hbar_clip_master";
       }
       program { name: "hbar_hide";
          signal: "elm,action,hide,hbar";
          source: "elm";
          action:  STATE_SET "hidden" 0.0;
          target: "sb_hbar_clip_master";
       }
       program { name: "hbar_show_always";
          signal: "elm,action,show_always,hbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbvis_h);
             v |= get_int(sbalways_h);
             if (!v) {
                set_int(sbalways_h, 1);
                emit("do-show-hbar", "");
                set_int(sbvis_h, 1);
             }
          }
       }
       program { name: "hbar_show_notalways";
          signal: "elm,action,show_notalways,hbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbalways_h);
             if (v) {
                set_int(sbalways_h, 0);
                v = get_int(sbvis_h);
                if (!v) {
                   emit("do-hide-hbar", "");
                   set_int(sbvis_h, 0);
                }
             }
          }
       }
       program { name: "sb_hbar_show";
          signal: "do-show-hbar";
          source: "";
          action:  STATE_SET "default" 0.0;
          transition: LINEAR 1.0;
          target: "sb_hbar_clip";
       }
       program { name: "sb_hbar_hide";
          signal: "do-hide-hbar";
          source: "";
          action:  STATE_SET "hidden" 0.0;
          transition: LINEAR 1.0;
          target: "sb_hbar_clip";
       }
    }
 }
 

///////////////////////////////////////////////////////////////////////////////
/* group { name: "elm/scroller/base/default"; */
/*    alias: "elm/list/base/default"; */
/*    alias: "elm/genlist/base/default"; */
/*    alias: "elm/gengrid/base/default"; */
/*    script { */
/*       public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer; */
/*       public timer0(val) */
/*       { */
/*          new v; */
/*          v = get_int(sbvis_v); */
/*          if (v) { */
/*             v = get_int(sbalways_v); */
/*             if (!v) { */
/*                emit("do-hide-vbar", ""); */
/*                set_int(sbvis_v, 0); */
/*             } */
/*          } */
/*          v = get_int(sbvis_h); */
/*          if (v) { */
/*             v = get_int(sbalways_h); */
/*             if (!v) { */
/*                emit("do-hide-hbar", ""); */
/*                set_int(sbvis_h, 0); */
/*             } */
/*          } */
/*          set_int(sbvis_timer, 0); */
/*          return 0; */
/*       } */
/*    } */
/*    images { */
/*       image: "bt_sm_base2.png" COMP; */
/*       image: "bt_sm_shine.png" COMP; */
/*       image: "bt_sm_hilight.png" COMP; */
/*       image: "sb_runnerh.png" COMP; */
/*       image: "sb_runnerv.png" COMP; */
/*    } */
/*    parts { */

/*       part { name: "clipper"; */
/*          type: RECT; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*          } */
/*       } */
/*       part { name: "elm.swallow.content"; */
/*          clip_to: "clipper"; */
/*          type: SWALLOW; */
/*          description { state: "default" 0.0; */
/*          } */
/*       } */
/*       part { name: "sb_vbar_clip_master"; */
/*          type: RECT; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*          } */
/*          description { state: "hidden" 0.0; */
/*             visible: 0; */
/*             color: 255 255 255 0; */
/*          } */
/*       } */
/*       part { name: "sb_vbar_clip"; */
/*          clip_to: "sb_vbar_clip_master"; */
/*          type: RECT; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*          } */
/*          description { state: "hidden" 0.0; */
/*             visible: 0; */
/*             color: 255 255 255 0; */
/*          } */
/*       } */
/*       part { name: "sb_vbar"; */
/*          type: RECT; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*             fixed: 1 1; */
/*             visible: 0; */
/*             min: 17 17; */
/*             align: 1.0 0.0; */
/*             rel1 { */
/*                relative: 1.0 0.0; */
/*                offset:   -2 0; */
/*             } */
/*             rel2 { */
/*                relative: 1.0 0.0; */
/*                offset:   -2 -1; */
/*                to_y:     "sb_hbar"; */
/*             } */
/*          } */
/*       } */
/*       part { name: "sb_vbar_runner"; */
/*          clip_to: "sb_vbar_clip"; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*             min: 3 3; */
/*             max: 3 99999; */
/*             rel1.to:       "sb_vbar"; */
/*             rel2.to:       "sb_vbar"; */
/*             image { */
/*                normal: "sb_runnerv.png"; */
/*                border: 0 0 4 4; */
/*             } */
/*             fill.smooth: 0; */
/*          } */
/*       } */
/*       part { name: "elm.dragable.vbar"; */
/*          clip_to: "sb_vbar_clip"; */
/*          mouse_events: 0; */
/*          dragable { */
/*             x: 0 0 0; */
/*             y: 1 1 0; */
/*             confine: "sb_vbar"; */
/*          } */
/*          description { state: "default" 0.0; */
/*             fixed: 1 1; */
/*             min: 17 17; */
/*             rel1 { */
/*                relative: 0.5  0.5; */
/*                offset:   0    0; */
/*                to: "sb_vbar"; */
/*             } */
/*             rel2 { */
/*                relative: 0.5  0.5; */
/*                offset:   0    0; */
/*                to: "sb_vbar"; */
/*             } */
/*             image { */
/*                normal: "bt_sm_base2.png"; */
/*                border: 6 6 6 6; */
/*             } */
/*             image.middle: SOLID; */
/*          } */
/*       } */
/*       part { name: "sb_vbar_over1"; */
/*          clip_to: "sb_vbar_clip"; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*             rel1.to: "elm.dragable.vbar"; */
/*             rel2.relative: 1.0 0.5; */
/*             rel2.to: "elm.dragable.vbar"; */
/*             image { */
/*                normal: "bt_sm_hilight.png"; */
/*                border: 6 6 6 0; */
/*             } */
/*          } */
/*       } */
/*       part { name: "sb_vbar_over2"; */
/*          clip_to: "sb_vbar_clip"; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*             rel1.to: "elm.dragable.vbar"; */
/*             rel2.to: "elm.dragable.vbar"; */
/*             image { */
/*                normal: "bt_sm_shine.png"; */
/*                border: 6 6 6 0; */
/*             } */
/*          } */
/*       } */

/*       part { name: "sb_hbar_clip_master"; */
/*          type: RECT; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*          } */
/*          description { state: "hidden" 0.0; */
/*             visible: 0; */
/*             color: 255 255 255 0; */
/*          } */
/*       } */
/*       part { name: "sb_hbar_clip"; */
/*          clip_to: "sb_hbar_clip_master"; */
/*          type: RECT; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*          } */
/*          description { state: "hidden" 0.0; */
/*             visible: 0; */
/*             color: 255 255 255 0; */
/*          } */
/*       } */
/*       part { name: "sb_hbar"; */
/*          type: RECT; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*             fixed: 1 1; */
/*             visible: 0; */
/*             min: 17 17; */
/*             align: 0.0 1.0; */
/*             rel1 { */
/*                relative: 0.0 1.0; */
/*                offset:   0 -2; */
/*             } */
/*             rel2 { */
/*                relative: 0.0 1.0; */
/*                offset:   -1 -2; */
/*                to_x:     "sb_vbar"; */
/*             } */
/*          } */
/*       } */
/*       part { name: "sb_hbar_runner"; */
/*          clip_to: "sb_hbar_clip"; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*             min: 3 3; */
/*             max: 99999 3; */
/*             rel1.to:       "sb_hbar"; */
/*             rel2.to:       "sb_hbar"; */
/*             image { */
/*                normal: "sb_runnerh.png"; */
/*                border: 4 4 0 0; */
/*             } */
/*             fill.smooth: 0; */
/*          } */
/*       } */
/*       part { name: "elm.dragable.hbar"; */
/*          clip_to: "sb_hbar_clip"; */
/*          mouse_events: 0; */
/*          dragable { */
/*             x: 1 1 0; */
/*             y: 0 0 0; */
/*             confine: "sb_hbar"; */
/*          } */
/*          description { state: "default" 0.0; */
/*             fixed: 1 1; */
/*             min: 17 17; */
/*             rel1 { */
/*                relative: 0.5  0.5; */
/*                offset:   0    0; */
/*                to: "sb_hbar"; */
/*             } */
/*             rel2 { */
/*                relative: 0.5  0.5; */
/*                offset:   0    0; */
/*                to: "sb_hbar"; */
/*             } */
/*             image { */
/*                normal: "bt_sm_base2.png"; */
/*                border: 6 6 6 6; */
/*             } */
/*             image.middle: SOLID; */
/*          } */
/*       } */
/*       part { name: "sb_hbar_over1"; */
/*          clip_to: "sb_hbar_clip"; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*             rel1.to: "elm.dragable.hbar"; */
/*             rel2.relative: 1.0 0.5; */
/*             rel2.to: "elm.dragable.hbar"; */
/*             image { */
/*                normal: "bt_sm_hilight.png"; */
/*                border: 6 6 6 0; */
/*             } */
/*          } */
/*       } */
/*       part { name: "sb_hbar_over2"; */
/*          clip_to: "sb_hbar_clip"; */
/*          mouse_events: 0; */
/*          description { state: "default" 0.0; */
/*             rel1.to: "elm.dragable.hbar"; */
/*             rel2.to: "elm.dragable.hbar"; */
/*             image { */
/*                normal: "bt_sm_shine.png"; */
/*                border: 6 6 6 0; */
/*             } */
/*          } */
/*       } */
/*    } */
/*    programs { */
/*       program { name: "load"; */
/*          signal: "load"; */
/*          source: ""; */
/*          script { */
/*             set_state(PART:"sb_hbar_clip", "hidden", 0.0); */
/*             set_state(PART:"sb_vbar_clip", "hidden", 0.0); */
/*             set_int(sbvis_h, 0); */
/*             set_int(sbvis_v, 0); */
/*             set_int(sbalways_v, 0); */
/*             set_int(sbalways_h, 0); */
/*             set_int(sbvis_timer, 0); */
/*          } */
/*       } */

/*       program { name: "vbar_show"; */
/*          signal: "elm,action,show,vbar"; */
/*          source: "elm"; */
/*          action:  STATE_SET "default" 0.0; */
/*          target: "sb_vbar_clip_master"; */
/*       } */
/*       program { name: "vbar_hide"; */
/*          signal: "elm,action,hide,vbar"; */
/*          source: "elm"; */
/*          action:  STATE_SET "hidden" 0.0; */
/*          target: "sb_vbar_clip_master"; */
/*       } */
/*       program { name: "vbar_show_always"; */
/*          signal: "elm,action,show_always,vbar"; */
/*          source: "elm"; */
/*          script { */
/*             new v; */
/*             v = get_int(sbvis_v); */
/*             v |= get_int(sbalways_v); */
/*             if (!v) { */
/*                set_int(sbalways_v, 1); */
/*                emit("do-show-vbar", ""); */
/*                set_int(sbvis_v, 1); */
/*             } */
/*          } */
/*       } */
/*       program { name: "vbar_show_notalways"; */
/*          signal: "elm,action,show_notalways,vbar"; */
/*          source: "elm"; */
/*          script { */
/*             new v; */
/*             v = get_int(sbalways_v); */
/*             if (v) { */
/*                set_int(sbalways_v, 0); */
/*                v = get_int(sbvis_v); */
/*                if (!v) { */
/*                   emit("do-hide-vbar", ""); */
/*                   set_int(sbvis_v, 0); */
/*                } */
/*             } */
/*          } */
/*       } */
/*       program { name: "sb_vbar_show"; */
/*          signal: "do-show-vbar"; */
/*          source: ""; */
/*          action:  STATE_SET "default" 0.0; */
/*          transition: LINEAR 1.0; */
/*          target: "sb_vbar_clip"; */
/*       } */
/*       program { name: "sb_vbar_hide"; */
/*          signal: "do-hide-vbar"; */
/*          source: ""; */
/*          action:  STATE_SET "hidden" 0.0; */
/*          transition: LINEAR 1.0; */
/*          target: "sb_vbar_clip"; */
/*       } */

/*       program { name: "hbar_show"; */
/*          signal: "elm,action,show,hbar"; */
/*          source: "elm"; */
/*          action:  STATE_SET "default" 0.0; */
/*          target: "sb_hbar_clip_master"; */
/*       } */
/*       program { name: "hbar_hide"; */
/*          signal: "elm,action,hide,hbar"; */
/*          source: "elm"; */
/*          action:  STATE_SET "hidden" 0.0; */
/*          target: "sb_hbar_clip_master"; */
/*       } */
/*       program { name: "hbar_show_always"; */
/*          signal: "elm,action,show_always,hbar"; */
/*          source: "elm"; */
/*          script { */
/*             new v; */
/*             v = get_int(sbvis_h); */
/*             v |= get_int(sbalways_h); */
/*             if (!v) { */
/*                set_int(sbalways_h, 1); */
/*                emit("do-show-hbar", ""); */
/*                set_int(sbvis_h, 1); */
/*             } */
/*          } */
/*       } */
/*       program { name: "hbar_show_notalways"; */
/*          signal: "elm,action,show_notalways,hbar"; */
/*          source: "elm"; */
/*          script { */
/*             new v; */
/*             v = get_int(sbalways_h); */
/*             if (v) { */
/*                set_int(sbalways_h, 0); */
/*                v = get_int(sbvis_h); */
/*                if (!v) { */
/*                   emit("do-hide-hbar", ""); */
/*                   set_int(sbvis_h, 0); */
/*                } */
/*             } */
/*          } */
/*       } */
/*       program { name: "sb_hbar_show"; */
/*          signal: "do-show-hbar"; */
/*          source: ""; */
/*          action:  STATE_SET "default" 0.0; */
/*          transition: LINEAR 1.0; */
/*          target: "sb_hbar_clip"; */
/*       } */
/*       program { name: "sb_hbar_hide"; */
/*          signal: "do-hide-hbar"; */
/*          source: ""; */
/*          action:  STATE_SET "hidden" 0.0; */
/*          transition: LINEAR 1.0; */
/*          target: "sb_hbar_clip"; */
/*       } */

/*       program { name: "scroll"; */
/*          signal: "elm,action,scroll"; */
/*          source: "elm"; */
/*          script { */
/*             new v; */
/*             v = get_int(sbvis_v); */
/*             v |= get_int(sbalways_v); */
/*             if (!v) { */
/*                emit("do-show-vbar", ""); */
/*                set_int(sbvis_v, 1); */
/*             } */
/*             v = get_int(sbvis_h); */
/*             v |= get_int(sbalways_h); */
/*             if (!v) { */
/*                emit("do-show-hbar", ""); */
/*                set_int(sbvis_h, 1); */
/*             } */
/*             v = get_int(sbvis_timer); */
/*             if (v > 0) cancel_timer(v); */
/*             v = timer(2.0, "timer0", 0); */
/*             set_int(sbvis_timer, v); */
/*          } */
/*       } */
/*    } */
/* } */

////////////////////////////////////////////////////
group { name: "elm/genlist/item/default/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "labels" "elm.text";
   data.item: "icons" "elm.swallow.icon elm.swallow.starred elm.swallow.end";
   data.item: "treesize" "20";
   //      data.item: "states" "";
   images {
      image: "sel_bg.png" COMP;
   }
   parts {   
      part { name: "bg";
 
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;

            image {
               normal: "sel_bg.png";
               border: 15 15 15 15;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }

   

      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
 
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {

               relative: 0.0  1.0;
               offset:   4   -4;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.starred";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               to: "elm.swallow.end";
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               to: "elm.swallow.end";
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         type:           TEXT;
         //         effect:         SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 1 1;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   8 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 255 255 255 200;
            //color3: 147 147 147 200;
            text {
               font: "Comfortaa";
               size: 18;
               //min: 1 1;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            //color3: 0 0 0 64;
         }
      }

      part {
         name:           "event";
         type:           RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
   }
}

////////////////////////////////////////////////////
group { name: "elm/genlist/item_odd/default/default";
   alias: "elm/genlist/item_compress_odd/default/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "labels" "elm.text";
   data.item: "icons" "elm.swallow.playing elm.swallow.icon elm.swallow.end elm.swallow.label";
   data.item: "treesize" "20";
   //      data.item: "states" "";
   images {
      image: "sel_bg.png" COMP;
   }
   parts {   
      part { name: "bg";
 
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 1;
            color: 0 0 0 100;

            image {
               normal: "sel_bg.png";
               border: 15 15 15 15;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }

   

      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
 
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {

               relative: 0.0  1.0;
               offset:   4   -4;
            }
         }
      }
      part { name: "elm.swallow.playing";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.playing";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.playing";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
 part { name: "elm.text";
         type:           TEXT;
         //         effect:         SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 1 1;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   8 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 255 255 255 200;
            //color3: 147 147 147 200;
            text {
               font: "Comfortaa";
               size: 18;
               //min: 1 1;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            //color3: 0 0 0 64;
         }
      }
      part {
         name:           "event";
         type:           RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
   }
}


////////////////////////////////////////////////////
group { name: "elm/genlist/item/track/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "labels" "elm.text";
   data.item: "icons" "elm.swallow.icon elm.swallow.starred elm.swallow.end";
   data.item: "treesize" "20";
   //      data.item: "states" "";
   images {
      image: "sel_bg.png" COMP;
   }
   parts {   
      part { name: "bg";
 
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;

            image {
               normal: "sel_bg.png";
               border: 15 15 15 15;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }

   

      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
 
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {

               relative: 0.0  1.0;
               offset:   4   -4;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.starred";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               to: "elm.swallow.end";
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               to: "elm.swallow.end";
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         type:           TEXT;
         //         effect:         SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 1 1;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   8 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 255 255 255 200;
            //color3: 147 147 147 200;
            text {
               font: "Comfortaa";
               size: 18;
               //min: 1 1;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            //color3: 0 0 0 64;
         }
      }
      part {
         name:           "event";
         type:           RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
   }
}

////////////////////////////////////////////////////
group { name: "elm/genlist/item_odd/track/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "labels" "elm.text";
   data.item: "icons" "elm.swallow.playing elm.swallow.icon elm.swallow.end elm.swallow.label";
   data.item: "treesize" "20";
   //      data.item: "states" "";
   images {
      image: "sel_bg.png" COMP;
   }
   parts {   
      part { name: "bg";
 
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 1;
            color: 0 0 0 100;

            image {
               normal: "sel_bg.png";
               border: 15 15 15 15;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }

   

      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
 
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {

               relative: 0.0  1.0;
               offset:   4   -4;
            }
         }
      }
      part { name: "elm.swallow.playing";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.playing";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.playing";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
 part { name: "elm.text";
         type:           TEXT;
         //         effect:         SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 1 1;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   8 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 255 255 255 200;
            //color3: 147 147 147 200;
            text {
               font: "Comfortaa";
               size: 18;
               //min: 1 1;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            //color3: 0 0 0 64;
         }
      }
      part {
         name:           "event";
         type:           RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
   }
}


///////////////////////////////////////////////////////////////////////////////
group { name: "elm/win/inwin/default";
   images {
      image: "inwin_bg.png" COMP;
   }
   parts {
      part { name: "base";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 1.0;
         visible: 1;
            color: 0 0 0 180;
         }
      }

      part { name: "pop";
         mouse_events: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel1.offset: -5 -5;
            rel2.to: "elm.swallow.content";
            rel2.offset: 4 4;
            image {
               normal: "inwin_bg.png";
               border: 68 68 68 68;
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.relative: 0.5 0.5;
            rel1.offset: -359 -199;
            rel2.relative: 0.5 0.5;
            rel2.offset: 360 200;
            
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "base";
      }
   }
}

///////////////////////////////////////////////////////////////////////////////

   styles {
      style { name: "textblock_style";
         base: "font=Comfortaa font_size=20 color=#fff wrap=word";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "hilight" "+ font=Sans:style=Bold";
         tag:  "b" "+ font=Sans:style=Bold";
         tag:  "c" "+ align=center";
         tag:  "tab" "\t";
      }
      style { name: "genlist_style";
         base: "font=Comfortaa font_size=16 color=#fff";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "hilight" "+ font=Sans:style=Bold";
         tag:  "b" "+ font=Sans:style=Bold";
         tag:  "c" "+ align=center";
         tag:  "tab" "\t";
      }
   }

group { name: "elm/label/base/default";
   data.item: "default_font_size" "20";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
  
   parts {

      part { name: "label.swallow.background";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 1;
            rel1 { relative: 0 0; to: "elm.text"; }
            rel2 { relative: 1 1; to: "elm.text"; }
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            text {
               style: "textblock_style";
               min: 1 1;
            }
         }
      }
   }
}


///////////////////////////////////////////////////////////////////////////////
group { name: "elm/gengrid/item/default/default";
   data.item: "labels" "elm.text";
   data.item: "icons" "elm.swallow.icon elm.swallow.end";
   images {

   }
   parts {
      part {
         name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "base";
         mouse_events: 0;
         type: RECT;
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
         }
      }
      part { name: "bg";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            image {
               normal: "sel_bg.png";
               border: 15 15 15 15;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }

      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
             rel1 {
                  relative: 0.0 0.0;
                  offset: 18 20;
               }
               rel2 {
                  to_y: "elm.text";
                  relative: 1.0 0.0;
                  offset: -17 -1;
               }
         }
      }
      part { name: "elm.text";
         type:           TEXT;
         effect:         SHADOW;
         mouse_events:   0;
         scale: 1;
          description {
               state: "default" 0.0;
               align: 0.5 1.0;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 20 -18;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -20 -20;
               }
               visible: 1;
               color: 255 255 255 200;
               color3: 0 0 0 200;

               text {
                  font: "Comfortaa";
                  size: 14;
                  min: 0 1;
                  align: 0.5 0.5;
               }
            }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color3: 0 0 0 255;
         }
      }
  
     
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
       
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
       
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
        
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
   }
}

 group { name: "elm/entry/base-single/default";
      styles
	{
	   style { name: "entry_single_textblock_style";
	      base: "font=Comfortaa font_size=16 color=#FFF wrap=none";
	      tag:  "br" "\n";
              tag:  "ps" "ps";
	      tag:  "tab" "\t";
	      tag:  "em" "+ font=Sans:style=Oblique";
	      tag:  "b" "+ font=Sans:style=Bold";
	      tag:  "link" "+ color=#800 underline=on underline_color=#8008";
	      tag:  "hilight" "+ font=Sans:style=Bold";
	   }
	   style { name: "entry_single_textblock_disabled_style";
 	      base: "font=Comfortaa font_size=16 color=#00000080 wrap=none";
	      tag:  "br" "\n";
              tag:  "ps" "ps";
	      tag:  "tab" "\t";
	      tag:  "em" "+ font=Sans:style=Oblique";
	      tag:  "b" "+ font=Sans:style=Bold";
	      tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
	      tag:  "hilight" "+ font=Sans:style=Bold";
	   }
	}
      parts {
	 part { name: "elm.text";
	    type: TEXTBLOCK;
	    mouse_events: 1;
	    scale: 1;
	    entry_mode: EDITABLE;
	    select_mode: EXPLICIT;
	    multiline: 0;
	    source: "elm/entry/selection/default"; // selection under
	    source4: "elm/entry/cursor/default"; // cursorover
	    source5: "elm/entry/anchor/default"; // anchor under
	    description { state: "default" 0.0;
	       text {
		  style: "entry_single_textblock_style";
		  min: 1 1;
                  max: 0 1;
	       }
	    }
	    description { state: "disabled" 0.0;
               inherit: "default" 0.0;
	       text {
		  style: "entry_single_textblock_disabled_style";
	       }
	    }
	 }
      }
      programs {
	 program { name: "focus";
            signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
      }
   }

 group { name: "elm/entry/selection/default";
      parts {
         part { name: "bg";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       color: 128 128 128 128;
	    }
	 }
      }
   }

group { name: "elm/entry/cursor/default";
      images {
	 image: "cur_box.png" COMP;
	 image: "cur_hi.png" COMP;
	 image: "cur_shad.png" COMP;
	 image: "cur_shine.png" COMP;
	 image: "cur_glow.png" COMP;
      }
      parts {
         part { name: "clip2";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "clip";
	       rel2.to: "clip";
               visible: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
         part { name: "clip";
	    type: RECT;
	    mouse_events: 0;
            clip_to: "clip2";
	    description { state: "default" 0.0;
	       rel1.offset: -10 0;
	       rel2.offset: 9 9;
	    }
	    description { state: "hidden" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
         part { name: "bg";
	    mouse_events: 0;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel1.offset: -2 0;
	       rel2.to: "base";
	       rel2.offset: 1 1;
	       image.border: 2 2 2 2;
	       image.normal: "cur_shad.png";
	    }
	 }
         part { name: "base";
	    mouse_events: 0;
	    scale: 1;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       min: 2 2;
	       align: 0.5 1.0;
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -1;
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -1 -1;
	       image.normal: "cur_box.png";
	    }
	 }
         part { name: "hi";
	    mouse_events: 0;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       rel2.relative: 1.0 0.5;
	       image.normal: "cur_hi.png";
	    }
	 }
         part { name: "shine";
	    mouse_events: 0;
	    clip_to: "clip";
            clip_to: "clip2";
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       rel2.relative: 1.0 0.75;
	       image.border: 2 2 1 0;
	       image.normal: "cur_shine.png";
	       fill.smooth: 0;
	    }
	 }
         part { name: "glow";
	    mouse_events: 0;
            clip_to: "clip2";
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel1.relative: 0.0 -2.0;
	       rel1.offset: -2 0;
	       rel2.to: "base";
	       rel2.relative: 1.0 0.0;
	       rel2.offset: 1 1;
	       image.border: 2 2 0 4;
	       image.normal: "cur_glow.png";
	       fill.smooth: 0;
	    }
	    description { state: "hidden" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 0;
	    }
	 }
      }
      programs {
	 program { name: "show";
            signal: "show";
	    source: "";
            action: STATE_SET "hidden" 0.0;
	    in: 1.0 0.0;
	    transition: DECELERATE 2.0;
	    target: "glow";
	    after: "show2";
	 }
	 program { name: "show2";
            action: STATE_SET "hidden" 0.0;
	    in: 0.2 0.0;
	    target: "clip";
	    after: "show3";
	 }
	 program { name: "show3";
            action: STATE_SET "default" 0.0;
	    in: 0.5 0.0;
	    target: "clip";
	    after: "show4";
	 }
	 program { name: "show4";
            action: STATE_SET "default" 0.0;
	    in: 0.5 0.0;
	    transition: DECELERATE 0.5;
	    target: "glow";
	    after: "show";
	 }
	 program { name: "focused";
	    signal: "elm,action,focus";
	    source: "elm";
            action: STATE_SET "focused" 0.0;
	    target: "clip2";
	 }
	 program { name: "unfocused";
	    signal: "elm,action,unfocus";
	    source: "elm";
            action: STATE_SET "default" 0.0;
	    target: "clip2";
	 }
      }
   }

///////////////////////////////////////////////////////////////////////////////
group { name: "elm/button/base/mediaplayer";
   alias: elm/button/base/view_list2;

   images {
      image: "sel_bg.png" COMP;
   }
   parts {
      part { name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }

      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: 0 2;
            rel2.offset: 0 -1;
            image {
               normal: "sel_bg.png";
               border: 14 14 14 14;
            }
            image.middle: SOLID;
            color: 255 255 255 255;
         }
      }


      part { name: "button_image";
         type: RECT;
         mouse_events: 1;
         description {
            color: 255 255 255 0;
            state: "default" 0.0;
            visible: 1;
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
         }
      }

      part { name: "elm.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
               fixed: 1 0;
	       visible: 0;
	       align: 0.0 0.5;
	       rel1.offset: 4 4;
	       rel2.offset: 3 -5;
	       rel2.relative: 0.0 1.0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
               fixed: 1 0;
	       visible: 1;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel2.offset: 4 -5;
	    }
	    description { state: "icononly" 0.0;
	       inherit: "default" 0.0;
               fixed: 0 0;
	       visible: 1;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       rel2.offset: -5 -5;
	       rel2.relative: 1.0 1.0;
	       aspect_preference: VERTICAL;
	    }
	 }
         part {
	    name:          "elm.text";
	    type:          TEXT;
	    effect:        SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to_x: "elm.swallow.content";
	       rel1.relative: 1.0 0.0;
               rel1.offset: 0 4;
	       rel2.offset: -5 -5;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       text {
		  font:     "Sans,Edje-Vera";
		  size:     10;
		  min:      0 0;
		  align:    0.5 0.5;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       text.min: 1 1;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	    }
	    description { state: "disabled_visible" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	       visible: 1;
	       text.min: 1 1;
	    }
	 }
    
       part {	  name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.5;
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	    }
	 }
	 part { name: "over2";
	    mouse_events: 1;
	    repeat_events: 1;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       visible: 0;
	    }
	 }
         part { name: "over3";
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 255 255 255 0;
	       fill.smooth : 0;
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }

     
      /* part { name: "shine_white"; */
      /*    clip_to: "disclip"; */
      /*    mouse_events: 0; */
      /*    description { state: "default" 0.0; */
      /*       color: 255 255 255 200; */
      /*       rel1.to: "bg"; */
      /*       rel2.to: "bg"; */
      /*       image { */
      /*          normal: "sel_shine_white.png"; */
      /*          border: 12 12 6 6; */
      /*       } */
      /*    } */
      /* } */
      /* part { name: "shine_black"; */
      /*    clip_to: "disclip"; */
      /*    mouse_events: 0; */
      /*    description { state: "default" 0.0; */
      /*       color: 255 255 255 200; */
      /*       rel1.to: "bg"; */
      /*       rel2.to: "bg"; */
      /*       image { */
      /*          normal: "sel_shine_black.png"; */
      /*          border: 12 12 6 6; */
      /*       } */
      /*    } */
      /* } */
      /* part { name: "hilight"; */
      /*    clip_to: "disclip"; */
      /*    mouse_events: 0; */
      /*    description { state: "default" 0.0; */
      /*       color: 255 255 255 80; */
      /*       rel1.to: "bg"; */
      /*       rel2.to: "bg"; */
      /*       image { */
      /*          normal: "sel_hilight.png"; */
      /*          border: 12 12 6 6; */
      /*       } */
      /*    } */
      /* } */
 	 part { name: "disabler";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       visible: 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
   }
   programs {
      program {
         name:   "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program {
         name:   "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program {
         name:   "button_unclick3";
         signal: "mouse,up,1";
         source: "over3";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program {
         name:   "button_mouse_in";
         signal: "mouse,in";
         source: "over3";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:   "button_mouse_out";
         signal: "mouse,out";
         source: "over3";
         action:  STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target:  "disclip";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         transition: DECELERATE 0.5;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

